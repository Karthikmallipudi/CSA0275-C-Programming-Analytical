#include <stdio.h>

int max(int a, int b) {
    return (a > b) ? a : b;
}

int min(int a, int b) {
    return (a < b) ? a : b;
}

int kadane(int arr[], int n) {
    int maxEndingHere = arr[0];
    int maxSoFar = arr[0];

    for (int i = 1; i < n; i++) {
        maxEndingHere = max(arr[i], maxEndingHere + arr[i]);
        maxSoFar = max(maxSoFar, maxEndingHere);
    }

    return maxSoFar;
}

int maxCircularSum(int arr[], int n) {
    int maxKadane = kadane(arr, n);

    if (maxKadane < 0) {
        return maxKadane; 
    }

    int totalSum = 0;

    for (int i = 0; i < n; i++) {
        totalSum += arr[i];
        arr[i] = -arr[i]; 
    }

    int maxCircularSum = totalSum + kadane(arr, n);

    return max(maxKadane, maxCircularSum);
}

int main() {
    int arr[] = {8, -1, 3, 4};
    int size = sizeof(arr) / sizeof(arr[0]);

    int result = maxCircularSum(arr, size);

    printf("Maximum sum of a circular subarray: %d\n", result);

    return 0;
}
