#include <stdio.h>

void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

int partition(int arr[], int low, int high) {
    int pivot = arr[high];
    int i = low - 1;

    for (int j = low; j < high; j++) {
        if (arr[j] >= pivot) {
            i++;
            swap(&arr[i], &arr[j]);
        }
    }

    swap(&arr[i + 1], &arr[high]);
    return i + 1;
}

int kthLargestElement(int arr[], int low, int high, int k) {
    if (k > 0 && k <= high - low + 1) {
        int pivotIndex = partition(arr, low, high);

        if (pivotIndex - low == k - 1) {
            return arr[pivotIndex];
        }

        if (pivotIndex - low > k - 1) {
            return kthLargestElement(arr, low, pivotIndex - 1, k);
        }

        return kthLargestElement(arr, pivotIndex + 1, high, k - pivotIndex + low - 1);
    }

    return -1; 
}

int main() {
    int arr[] = {3, 2, 1, 5, 6, 4};
    int size = sizeof(arr) / sizeof(arr[0]);
    int k = 2;

    int result = kthLargestElement(arr, 0, size - 1, k);

    if (result != -1) {
        printf("The %dth largest element is: %d\n", k, result);
    } else {
        printf("Invalid value of k.\n");
    }

    return 0;
}
